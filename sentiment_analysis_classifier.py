# -*- coding: utf-8 -*-
"""Sentiment analysis classifier

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mj2gW6gTNDj7smSFDZ5TE0PcIRwaS85F
"""

!pip install -q simpletransformers

corpus_train = [

  ['Quiero información sobre cómo contratar la línea', 0],

  ['Solicito ayuda de vuestros servicios', 0],

  ['Quiero poner una queja', 1],

  ['Voy a hacer una reclamación por el mal servicio', 1],

  ['Este producto es totalmente recomendable', 2],

  ['Me encanta el producto y lo recomiendo', 2],

]

corpus_eval = [

  ['Por favor, quiero ayuda de sobre el uso', 0],

  ['Me gustaría poner una reclamación', 1],

  ['Muy recomendable sin duda', 2],

]

from simpletransformers.classification import ClassificationModel, ClassificationArgs

import pandas as pd

import logging

import os

logging.basicConfig(level=logging.WARNING)

logging.getLogger('transformers').setLevel
(logging.WARNING)

train_df = pd.DataFrame(corpus_train)

train_df.columns = ["text", "labels"]

eval_df = pd.DataFrame(corpus_eval)

eval_df.columns = ["text", "labels"]

os.environ["CUDA_VISIBLE_DEVICES"] = "-1"

model_args = ClassificationArgs()

model_args.num_train_epochs = 20

model_args.overwrite_output_dir = True

model_args.use_cuda = False

model = ClassificationModel('distilbert', 'distilbert-base-multilingual-cased', args=model_args, num_labels=3)

model.train_model(train_df)

result, outputs, wrong = model.eval_model(eval_df)

print(result)

from simpletransformers.classification import ClassificationModel, ClassificationArgs

import pandas as pd

import logging

logging.basicConfig(level=logging.WARNING)

logging.getLogger('transformers').setLevel
(logging.WARNING)

# Preparar conjuntos

train_df = pd.DataFrame(corpus_train)

train_df.columns = ["text", "labels"]

eval_df = pd.DataFrame(corpus_eval)

eval_df.columns = ["text", "labels"]

# Preparar el modelo

model_args = ClassificationArgs()

model_args.num_train_epochs = 20

model_args.overwrite_output_dir = True

model = ClassificationModel('distilbert', 'distilbert-base-multilingual-cased', args=model_args, num_labels=3, use_cuda=False
)

# Entrenar el modelo

model.train_model(train_df)

# Evaluar el modelo

result, outputs, wrong = model.eval_model(eval_df)

print(result)